user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /dev/stderr;

events {
  worker_connections  2048;
  multi_accept on;
  use epoll;
}

http {
  server_tokens off;
  sendfile on;
  # tcp_nopush on;
  # tcp_nodelay on;
  # keepalive_timeout 15;
  include /etc/nginx/mime.types;
  # default_type application/octet-stream;
  access_log /dev/stdout;
  error_log /dev/stderr;
  gzip on;
  # gzip_disable "msie6";
  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-available/*.conf;
  open_file_cache off;
  charset UTF-8;

  upstream php-upstream {
      server 127.0.0.1:9000;
  }

  server {
      listen 443 ssl;
#      listen [::]:443;
      server_name filesky.ru www.filesky.ru;

    add_header				        "Access-Control-Allow-Origin" "*";
    add_header				        "Access-Control-Allow-Headers" "Origin, X-Requested-With, Content-Type, Accept, Authorization";
    add_header				        "Access-Control-Request-Methods" "GET, POST, OPTIONS";

    ssl_certificate /etc/letsencrypt/live/filesky.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/filesky.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


    #ssl_certificate /var/www/docker/live/filesky.ru/fullchain1.pem;
    #ssl_certificate_key /var/www/docker/live/filesky.ru/privkey1.pem;
    #include /var/www/docker/live/options-ssl-nginx.conf;
    #ssl_dhparam /var/www/docker/live/ssl-dhparams.pem;


      root /var/www/public;
      index index.php;

      location / {
          try_files $uri /index.php$is_args$args;
      }

      location ~ ^/index\.php(/|$) {
          fastcgi_pass php-upstream;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
          fastcgi_param DOCUMENT_ROOT $realpath_root;

          #fastcgi_buffers 16 16k;
          #fastcgi_buffer_size 32k;
      }

      location ~ \.php$ {
          return 404;
      }

  }



  server {
    if ($host = filesky.ru) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
#        listen [::]:80;

        server_name filesky.ru www.filesky.ru;
    return 404; # managed by Certbot
  }
}

